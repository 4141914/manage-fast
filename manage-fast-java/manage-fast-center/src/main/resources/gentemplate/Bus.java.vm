package ${package}.${moduleName};

import com.mf.common.base.Page;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@Service
public class ${className}Bus {

    private static Logger logger = LoggerFactory.getLogger(${className}Bus.class);

    @Autowired
    private I${className}Client client;    // ${comments}client

    /**
     * @方法说明:新增记录
     **/
    public Integer save(${className} ${classname}) {
        return client.save(${classname});
    }

    /**
	 * @方法说明:批量插入记录
	 **/
    public int[] insertBatch(List<${className}> list) {
        return client.insertBatch(list);
    }

    /**
     * @方法说明:新增记录并返回主键
     **/
    public long saveReturnKey(${className} ${classname}) {
        return client.saveReturnKey(${classname});
    }

    /**
     * @方法说明:删除记录(多条)
     **/
    public int delete(Long ids[]) {
        return client.delete(ids);
    }

    /**
     * @方法说明:按ID查找单个实体
     **/
    public ${className} findById(Long id) {
        return client.findById(id);
    }

    /**
     * @方法说明:更新记录
     **/
    public int update(${className} ${classname}) {
        return client.update(${classname});
    }

    /**
     * @方法说明:按条件查询分页列表
     **/
    public Page<${className}> queryPage(${className}Cond cond) {
        return client.queryPage(cond);
    }

    /**
     * @方法说明:按条件查询不分页列表(使用范型)
     **/
    public List<${className}> queryList(${className}Cond cond) {
        return client.queryList(cond);
    }

    /**
     * @方法说明:按条件查询记录个数
     **/
    public int queryCount(${className}Cond cond) {
        return client.queryCount(cond);
    }
}