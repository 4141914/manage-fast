package ${package}.${moduleName};

import com.mf.center.common.Page;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${classname}")
public class ${className}Controller {

    private static Logger logger = LoggerFactory.getLogger(${className}Controller.class);

    @Autowired
    private ${className}Service service; // ${comments}Service

    /**
     * @方法说明:新增记录
     **/
    @RequestMapping("/save")
    public Integer save(@RequestBody ${className} ${classname}) {
        return service.save(${classname});
    }

    /**
	 * @方法说明:批量插入记录
	 **/
    @RequestMapping("/insertBatch")
    public int[] insertBatch(@RequestBody List<${className}> list) {
        return service.insertBatch(list);
    }

    /**
     * @方法说明:新增记录并返回主键
     **/
    @RequestMapping("/saveReturnKey")
    public long saveReturnKey(@RequestBody ${className} ${classname}) {
        return service.saveReturnKey(${classname});
    }

    /**
     * @方法说明:删除记录(多条)
     **/
    @RequestMapping("/delete")
    public Integer delete(@RequestParam("ids[]") Long ids[]) {
        return service.delete(ids);
    }

    /**
     * @方法说明:修改记录
     **/
    @RequestMapping("/update")
    public Integer update(@RequestBody ${className} ${classname}) {
        return service.update(${classname});
    }

    /**
     * @方法说明:按条件查询分页列表页面
     **/
    @RequestMapping("/queryPage")
    public Page<${className}> queryPage(@RequestBody ${className}Cond cond) {
        return service.queryPage(cond);
    }

    /**
     * @方法说明:按条件查询列表页面
     **/
    @RequestMapping("/queryList")
    public List<${className}> queryList(@RequestBody ${className}Cond cond) {
        return service.queryList(cond);
    }

    /**
     * @方法说明:按条件查询记录个数
     **/
    @RequestMapping("/queryCount")
    public Integer queryCount(@RequestBody ${className}Cond cond) {
        return service.queryCount(cond);
    }

    /**
     * @方法说明:跳转到详细页面
     **/
    @RequestMapping("/findById")
    public ${className} findById(@RequestParam("id") Long id) {
        return service.findById(id);
    }
}